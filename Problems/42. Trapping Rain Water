class Solution:
    def trap(self, height: list[int]) -> int:
        if not height:
            return 0

        left, right = 0, len(height) - 1
        max_left, max_right = height[left], height[right]
        water = 0

        while left < right:
            if max_left < max_right:
                left += 1
                max_left = max(max_left, height[left])
                water += max_left - height[left]
                print(f"[left]left={left},right={right},water={water}")
            else:
                right -= 1
                # max_left<now(right height)<max right height
                max_right = max(max_right, height[right])
                water += max_right - height[right]
                print(f"[right]left={left},right={right},water={water}")

        return water

height = [0,1,0,2,1,0,1,3,2,1,2,1]
S=Solution()
ret=S.trap(height)
print(f"res={ret}")
